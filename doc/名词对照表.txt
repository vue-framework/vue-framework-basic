SaaS:软件即服务(业务逻辑层)
Pass:平台即服务(vue公用组件层)
iass:基础即服务(插件，工具层)

router:vue-router
过滤器:
视图组件：开发人员需要开发的view
容器组件:公共UI组件
布局组件:页面布局
filters:常见过滤器
指令:常见指令

工具:
    tools:
        getUrlParam:
    验证：邮箱判断等








获取 url 中的参数
function getUrlParam(sUrl, sKey) {
    var r = [] , s = null ;
    var regexp = /[?&]([\w]*)=([^&#]*)/g;
    var key,value
    while(s = regexp.exec(sUrl)){
	      key =s[1]
          value = s[2]
         if(!r[key])r[key] = value;
         else if(typeof(r[key]) == 'object'){
             r[key].push(value);
         }else{
              r[key] = [r[key],value];
         }
    }
    if(sKey){
        return r[sKey]||''
        
    }
    return r; 
}
//数组去重
Array.prototype.uniq = function () {
   var resArr = [];
   var flag = true;
   for(var i=0;i<this.length;i++){
       if(resArr.indexOf(this[i]) == -1){
           if(this[i] != this[i]){
              if(flag){
                   resArr.push(this[i]);
                   flag = false;
              }
           }else{
                resArr.push(this[i]);
           }
       }
   }
    return resArr;
}
//输出指定的时间
function formatDate(oDate, sFormation) {
   var o ={
       'yyyy' : oDate.getFullYear(),
       'yy' : (""+oDate.getFullYear()).slice(-2),
       'MM' : ("0"+(oDate.getMonth()+1)).slice(-2),
       'M': (""+(oDate.getMonth()+1)),
        'dd' : "0"+oDate.getDate(),
       'd' : ""+oDate.getDate(),
        'HH' : oDate.getHours(),
       'H' : ("0"+oDate.getHours()).slice(-2),
        'hh' : ("0"+(oDate.getHours()%12)).slice(-2),
       'h' : ""+oDate.getHours()%12,
        'mm' : ("0"+oDate.getMinutes()).slice(-2),
       'm' : ""+oDate.getMinutes(),
        'ss' : ("0"+oDate.getSeconds()).slice(-2),
       's' : ""+oDate.getSeconds(),
       'w' : ['日','一','二','三','四','五','六'][oDate.getDay()]
   }
      
   return sFormation.replace(/([a-z]+)/gi,function($1){return o[$1];});
      
}

//-变为驼峰
function cssStyle2DomStyle(sName) {
    var first =true
	return sName.split('-').map(function(item,i){
        if(first&&item) {
            first =false
            return item
        }
		return item.slice(0,1).toUpperCase()+item.slice(1)
	}).join('')
}

//字符串统计
function count(str) {
    var count = {};
    var str1 = str.match(/\S/g)
    for(var i in str1) {
        if(count[str1[i]]){
            count[str1[i]]++;
        }
        else{
            count[str1[i]] = 1;
        }
    }
    return count;
}